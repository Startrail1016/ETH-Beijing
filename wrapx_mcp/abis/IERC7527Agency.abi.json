{"contract":"IERC7527Agency", {"abi":[{"type":"receive","stateMutability":"payable"},{"type":"function","name":"description","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getStrategy","inputs":[],"outputs":[{"name":"app","type":"address","internalType":"address"},{"name":"asset","type":"tuple","internalType":"struct Asset","components":[{"name":"currency","type":"address","internalType":"address"},{"name":"basePremium","type":"uint256","internalType":"uint256"},{"name":"feeRecipient","type":"address","internalType":"address"},{"name":"mintFeePercent","type":"uint16","internalType":"uint16"},{"name":"burnFeePercent","type":"uint16","internalType":"uint16"}]},{"name":"attributeData","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getUnwrapOracle","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"premium","type":"uint256","internalType":"uint256"},{"name":"fee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getWrapOracle","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"premium","type":"uint256","internalType":"uint256"},{"name":"fee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"iconstructor","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unwrap","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"wrap","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"event","name":"Unwrap","inputs":[{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"premium","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"fee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Wrap","inputs":[{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"premium","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"fee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"description()":"7284e416","getStrategy()":"07da0603","getUnwrapOracle(bytes)":"8e1f1447","getWrapOracle(bytes)":"46992736","iconstructor()":"62189dfd","unwrap(address,uint256,bytes)":"3c6e2f22","wrap(address,bytes)":"8ba6cd03"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Unwrap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Wrap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"basePremium\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"mintFeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"burnFeePercent\",\"type\":\"uint16\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"attributeData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getUnwrapOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getWrapOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iconstructor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"wrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Unwrap(address,uint256,uint256,uint256)\":{\"details\":\"Emitted when `tokenId` token is unwrapped.\",\"params\":{\"fee\":\"The fee of unwrapping.\",\"premium\":\"The premium of unwrapping.\",\"to\":\"The address of the recipient of the currency.\",\"tokenId\":\"The identifier of the non-fungible token to unwrap.\"}},\"Wrap(address,uint256,uint256,uint256)\":{\"details\":\"Emitted when `tokenId` token is wrapped.\",\"params\":{\"fee\":\"The fee of wrapping.\",\"premium\":\"The premium of wrapping.\",\"to\":\"The address of the recipient of the newly created non-fungible token.\",\"tokenId\":\"The identifier of the newly created non-fungible token.\"}}},\"kind\":\"dev\",\"methods\":{\"description()\":{\"details\":\"OPTIONAL - This method can be used to improve usability and clarity of Agency, but interfaces and other contracts MUST NOT expect these values to be present.\",\"returns\":{\"_0\":\"the description of the agency, such as how `getWrapOracle()` and `getUnwrapOracle()` are calculated.\"}},\"getStrategy()\":{\"details\":\"Returns the strategy of the agency.\",\"returns\":{\"app\":\"The address of the app.\",\"asset\":\"The asset of the agency.\",\"attributeData\":\"The attributeData of the agency.\"}},\"getUnwrapOracle(bytes)\":{\"details\":\"Returns the premium and fee of unwrapping.\",\"params\":{\"data\":\"The data to encode to calculate the premium and fee of unwrapping.\"},\"returns\":{\"fee\":\"The fee of wrapping.\",\"premium\":\"The premium of wrapping.\"}},\"getWrapOracle(bytes)\":{\"details\":\"Returns the premium and fee of wrapping.\",\"params\":{\"data\":\"The data to encode to calculate the premium and fee of wrapping.\"},\"returns\":{\"fee\":\"The fee of wrapping.\",\"premium\":\"The premium of wrapping.\"}},\"iconstructor()\":{\"details\":\"Constructor of the instance contract.\"},\"unwrap(address,uint256,bytes)\":{\"details\":\"Unwrap a non-fungible token into some amount of currency. Todo: event\",\"params\":{\"data\":\"The data to encode into ifself and the non-fungible token with identifier `tokenId`.\",\"to\":\"The address of the recipient of the currency.\",\"tokenId\":\"The identifier of the non-fungible token to unwrap.\"}},\"wrap(address,bytes)\":{\"details\":\"Wrap some amount of currency into a non-fungible token.\",\"params\":{\"data\":\"The data to encode into ifself and the newly created non-fungible token.\",\"to\":\"The address of the recipient of the newly created non-fungible token.\"},\"returns\":{\"_0\":\"The identifier of the newly created non-fungible token.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/IERC7527Agency.sol\":\"IERC7527Agency\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":forge-std/=lib/forge-std/\",\":openzeppelin-contracts-master/=lib/openzeppelin-contracts-master/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"src/IERC7527Agency.sol\":{\"keccak256\":\"0x38bf4d55354102f9e428ab372a9246c9634542ebb932230b099fb805c5481e56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f97ccf857428df5a6beb67176ecb82eff106dd31c7c1f5946d7c3a964a16c4c5\",\"dweb:/ipfs/QmYpjGcgiKNv6RBYmrsZDLjXNZPneT5kG3xVUwPEWXMZWo\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"premium","type":"uint256","indexed":false},{"internalType":"uint256","name":"fee","type":"uint256","indexed":false}],"type":"event","name":"Unwrap","anonymous":false},{"inputs":[{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"premium","type":"uint256","indexed":false},{"internalType":"uint256","name":"fee","type":"uint256","indexed":false}],"type":"event","name":"Wrap","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"description","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStrategy","outputs":[{"internalType":"address","name":"app","type":"address"},{"internalType":"struct Asset","name":"asset","type":"tuple","components":[{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"basePremium","type":"uint256"},{"internalType":"address","name":"feeRecipient","type":"address"},{"internalType":"uint16","name":"mintFeePercent","type":"uint16"},{"internalType":"uint16","name":"burnFeePercent","type":"uint16"}]},{"internalType":"bytes","name":"attributeData","type":"bytes"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"getUnwrapOracle","outputs":[{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"getWrapOracle","outputs":[{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"iconstructor"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"unwrap"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"wrap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"description()":{"details":"OPTIONAL - This method can be used to improve usability and clarity of Agency, but interfaces and other contracts MUST NOT expect these values to be present.","returns":{"_0":"the description of the agency, such as how `getWrapOracle()` and `getUnwrapOracle()` are calculated."}},"getStrategy()":{"details":"Returns the strategy of the agency.","returns":{"app":"The address of the app.","asset":"The asset of the agency.","attributeData":"The attributeData of the agency."}},"getUnwrapOracle(bytes)":{"details":"Returns the premium and fee of unwrapping.","params":{"data":"The data to encode to calculate the premium and fee of unwrapping."},"returns":{"fee":"The fee of wrapping.","premium":"The premium of wrapping."}},"getWrapOracle(bytes)":{"details":"Returns the premium and fee of wrapping.","params":{"data":"The data to encode to calculate the premium and fee of wrapping."},"returns":{"fee":"The fee of wrapping.","premium":"The premium of wrapping."}},"iconstructor()":{"details":"Constructor of the instance contract."},"unwrap(address,uint256,bytes)":{"details":"Unwrap a non-fungible token into some amount of currency. Todo: event","params":{"data":"The data to encode into ifself and the non-fungible token with identifier `tokenId`.","to":"The address of the recipient of the currency.","tokenId":"The identifier of the non-fungible token to unwrap."}},"wrap(address,bytes)":{"details":"Wrap some amount of currency into a non-fungible token.","params":{"data":"The data to encode into ifself and the newly created non-fungible token.","to":"The address of the recipient of the newly created non-fungible token."},"returns":{"_0":"The identifier of the newly created non-fungible token."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","forge-std/=lib/forge-std/","openzeppelin-contracts-master/=lib/openzeppelin-contracts-master/","solady/=lib/solady/src/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/IERC7527Agency.sol":"IERC7527Agency"},"evmVersion":"shanghai","libraries":{}},"sources":{"src/IERC7527Agency.sol":{"keccak256":"0x38bf4d55354102f9e428ab372a9246c9634542ebb932230b099fb805c5481e56","urls":["bzz-raw://f97ccf857428df5a6beb67176ecb82eff106dd31c7c1f5946d7c3a964a16c4c5","dweb:/ipfs/QmYpjGcgiKNv6RBYmrsZDLjXNZPneT5kG3xVUwPEWXMZWo"],"license":"MIT"}},"version":1},"id":59}}
